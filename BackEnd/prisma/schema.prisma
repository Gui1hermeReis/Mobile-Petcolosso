// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  nome         String?
  username     String?
  email        String?
  matricula    Int?      @default(0)
  password     String?   @default("")
  funcao       String?   @default("")
  alterarSenha Boolean?
  interno      Boolean?
  active       Boolean?
  isDev        Boolean?  @default(false)
  isAdm        Boolean?  @default(false)
  createdAt    DateTime? @default(now())
  instituicao  String?

  @@map("users")
}

model Cameras {
  id                      Int                    @id @default(autoincrement())
  nome                    String?
  cadastro_hik_vision     String?
  ip                      String?
  designacao              String?
  numero_camera           String?
  novo_nome               String?
  contrato                String?
  endereco                String?
  bairro                  String?
  tipo_camera             String?
  regiao                  String?
  latitude                String?
  longitude               String?
  status                  Boolean?               @default(false)
  dados_analiticos        String?
  secretaria              String?
  tudoCerto               Boolean?               @default(false)
  problema                String?
  dataConferenciaProblema DateTime?
  dataConferenciaGravacao DateTime?
  observacoes             String?                @db.Text
  conferidoPor            String?
  diasGravados            String?
  diasFaltando            String?
  ocorrencias             OcorrenciasCameras[]
  historico               Historico[]
  chamados                Chamados[]
  cameras_Off             Cameras_Off[]
  realocacoes             Realocacoes[]
  ocorrenciaPivo          OcorrenciaPivo[]
  HistoricoChamado        HistoricoChamado[]
  HistoricoOcorrencias    HistoricoOcorrencias[]
  ArquivoProblema         ArquivoProblema[]

  @@map("cameras")
}

model Historico {
  id                     Int       @id @default(autoincrement())
  id_camera              Int?
  descricao              String?   @db.Text
  user_name              String?
  data                   DateTime?
  endereco_antigo        String?
  bairro_antigo          String?
  numero_antigo          String?
  numero_camera_antigo   String?
  numero_contrato_antigo String?
  latitude_antigo        String?
  longitude_antigo       String?

  cameras Cameras? @relation(fields: [id_camera], references: [id])

  @@map("historico")
}

model Chamados {
  id               Int       @id @default(autoincrement())
  id_camera        Int?
  motivo           String?
  descricao        String?   @db.Text
  status           Boolean   @default(false)
  data_abertura    DateTime  @default(now())
  data_atualizacao DateTime?
  solicitante      String?
  protocolo        String?
  atualizacoes     String?
  data_finalizacao DateTime?

  cameras        Cameras?         @relation(fields: [id_camera], references: [id])
  arquivoChamado ArquivoChamado[]

  @@map("chamados")
}

model ArquivoChamado {
  id          Int    @id @default(autoincrement())
  url         String
  nome        String
  id_chamados Int?

  Chamados Chamados? @relation(fields: [id_chamados], references: [id])

  @@map("arquivo_chamado")
}

model Cameras_Off {
  id            Int       @id @default(autoincrement())
  id_camera     Int?
  status        Boolean   @default(false)
  data_abertura DateTime? @default(now())

  cameras Cameras? @relation(fields: [id_camera], references: [id])

  @@map("cameras_off")
}

model Realocacoes {
  id            Int       @id @default(autoincrement())
  id_camera     Int?
  data_pedido   DateTime? @default(now())
  de_endereco   String?
  para_endereco String?
  oficio        String?
  data_oficio   String?
  status        Boolean   @default(false)

  cameras Cameras? @relation(fields: [id_camera], references: [id])

  @@map("realocacoes")
}

model Radares {
  id             Int       @id @default(autoincrement())
  areaId         String?
  sitio          String?
  latitude       String?
  longitude      String?
  tipo_camera    String?
  ultimaPassagem DateTime? @default(now())

  faixas Faixas[]

  @@map("radares")
}

model Faixas {
  id        Int      @id @default(autoincrement())
  nome      String?
  endereco  String?
  sentido   String?
  lombada   Radares? @relation(fields: [lombadaId], references: [id])
  lombadaId Int?

  @@map("faixas")
}

model OcorrenciasCameras {
  id                Int     @id @default(autoincrement())
  id_camera         Int?
  dataInicio        String?
  dataFim           String?
  id_natureza       Int?
  user_name         String?
  origem            String?
  empenhoVtr        Boolean @default(false)
  conduzirDp        Boolean @default(false)
  detido            Boolean @default(false)
  qtd_detido        Int?
  procurado         Int?
  desaparecido      Boolean @default(false)
  flagrante         Boolean @default(false)
  veiculo           Boolean @default(false)
  qtd_veiculo       Int?
  boletimOcorrencia String?
  protocolo         String?
  descricao         String? @db.Text
  instituicao       String?
  dataOcorrencia    String?
  status            String?
  captura           Boolean @default(false)
  plantao           String?
  imgSalva          Boolean @default(false)

  data DateTime @default(now())

  natureza       TipoNatureza?    @relation(fields: [id_natureza], references: [id])
  cameras        Cameras?         @relation(fields: [id_camera], references: [id])
  ocorrenciaPivo OcorrenciaPivo[]

  @@map("ocorrencias_cameras")
}

model OcorrenciaPivo {
  id                   Int     @id @default(autoincrement())
  ocorrenciasCamerasId Int?
  camerasId            Int?
  dataInicio           String?
  dataFim              String?

  OcorrenciasCameras OcorrenciasCameras? @relation(fields: [ocorrenciasCamerasId], references: [id])
  Cameras            Cameras?            @relation(fields: [camerasId], references: [id])

  @@map("ocorrencia_pivo")
}

model TipoNatureza {
  id        Int      @id @default(autoincrement())
  codigo    String
  descricao String?  @db.Text
  ativo     Boolean? @default(true)

  ocorrencias          OcorrenciasCameras[]
  HistoricoOcorrencias HistoricoOcorrencias[]

  @@map("tipo_natureza")
}

model Visitas {
  id                Int                 @id @default(autoincrement())
  descricao         String?             @db.Text
  nome              String?
  cpf               String?
  date              DateTime?
  empresa           String?
  qtd_pessoas       Int?
  telefone          String?
  cargo             String?
  cidade            String?
  estado            String?
  pais              String?
  visitasAdicionais VisitasAdicionais[]

  @@map("visitas")
}

model VisitasAdicionais {
  id          Int      @id @default(autoincrement())
  nome        String?
  cpf         String?
  telefone    String?
  passaporte  String?
  extrangeiro Boolean  @default(false)
  cargo       String?
  visitasId   Int?
  visitas     Visitas? @relation(fields: [visitasId], references: [id])

  @@map("visitas_adicionais")
}

model HistoricoChamado {
  id            Int       @id @default(autoincrement())
  id_chamado    Int?
  id_camera     Int?
  motivo        String?
  descricao     String?   @db.Text
  status        Boolean   @default(false)
  protocolo     String?
  dataAbertura  DateTime?
  dataAlteracao DateTime?
  user_name     String?
  atualizacoes  String?

  cameras Cameras? @relation(fields: [id_camera], references: [id])

  @@map("historico_chamado")
}

model HistoricoOcorrencias {
  id                Int       @id @default(autoincrement())
  id_ocorrencia     Int?
  id_camera         Int?
  dataInicio        String?
  dataFim           String?
  id_natureza       Int?
  origem            String?
  empenhoVtr        Boolean   @default(false)
  conduzirDp        Boolean   @default(false)
  detido            Boolean   @default(false)
  desaparecido      Boolean   @default(false)
  flagrante         Boolean   @default(false)
  veiculo           Boolean   @default(false)
  captura           Boolean   @default(false)
  imgSalva          Boolean   @default(false)
  qtd_detido        Int?
  procurado         Int?
  qtd_veiculo       Int?
  boletimOcorrencia String?
  protocolo         String?
  descricao         String?   @db.Text
  instituicao       String?
  dataOcorrencia    String?
  status            String?
  plantao           String?
  user_name         String?
  dataAbertura      DateTime?
  dataAlteracao     DateTime?

  natureza TipoNatureza? @relation(fields: [id_natureza], references: [id])
  cameras  Cameras?      @relation(fields: [id_camera], references: [id])

  @@map("historico_ocorrencias")
}

model Solicitacoes {
  id              Int       @id @default(autoincrement())
  expediente      String?
  tipo            String?
  solicitante     String?
  qtde            String?
  user_name       String?
  dataSolicitacao DateTime?
  regiao          String?
  bairro          String?
  endereco        String?
  observacoes     String?
  status          Boolean   @default(false)

  @@map("solicitacoes")
}

model CircuitoInterno {
  id       Int       @id @default(autoincrement())
  regiao   String?
  bairro   String?
  endereco String?
  local    String?
  link     String?
  data     DateTime?
  status   Boolean   @default(false)

  @@map("circuito_interno")
}

model ArquivoProblema {
  id        Int      @id @default(autoincrement())
  url       String
  nome      String
  id_camera Int?
  cameras   Cameras? @relation(fields: [id_camera], references: [id])

  @@map("arquivo_problema")
}

model DadosDashboard {
  id              Int     @id @default(autoincrement())
  tipo_ocorrencia String?
  data            String?
  quantidade      Int?

  @@map("dados_dashboard")
}
